"use strict";exports.id=518,exports.ids=[518],exports.modules={26069:(a,b,c)=>{c.d(b,{m_:()=>e,yI:()=>d});class d extends Error{constructor(a,b,c){super(a),this.field=b,this.value=c,this.name="ValidationError"}}class e extends Error{constructor(a,b){super(`${a} with identifier '${b}' not found`),this.name="NotFoundError"}}},51606:(a,b,c)=>{c.d(b,{$A:()=>j,AD:()=>q,Bo:()=>r,Gy:()=>l,Lf:()=>o,Ny:()=>i,Xi:()=>p,dP:()=>k,sS:()=>h,sr:()=>g,yv:()=>n,z7:()=>m});var d=c(59507);let e=d.Ikc({page:d.aig().int().positive().default(1),limit:d.aig().int().positive().max(100).default(20),sortBy:d.YjP().optional(),sortOrder:d.k5n(["asc","desc"]).default("desc")}),f=d.Ikc({dateFrom:d.p6U().optional(),dateTo:d.p6U().optional()}),g=e.extend({agentType:d.YjP().optional(),status:d.k5n(["pending","running","completed","failed","cancelled"]).optional(),nodeId:d.YjP().optional(),triggeredBy:d.k5n(["manual","schedule","webhook"]).optional()}).merge(f),h=d.Ikc({agentType:d.YjP().min(1,"Agent type is required"),nodeId:d.YjP().optional(),triggeredBy:d.k5n(["manual","schedule","webhook"]).default("manual"),config:d.g1P(d.YjP(),d.bzn()).optional(),metadata:d.g1P(d.YjP(),d.bzn()).optional()}),i=d.Ikc({status:d.k5n(["pending","running","completed","failed","cancelled"]).optional(),completedAt:d.YjP().datetime().optional(),durationMs:d.aig().int().nonnegative().optional(),costUsd:d.aig().nonnegative().optional(),tokensUsed:d.aig().int().nonnegative().optional(),resultSummary:d.YjP().optional(),errorMessage:d.YjP().optional(),exitCode:d.aig().int().optional(),logs:d.YjP().optional(),aiAnalysis:d.YjP().optional(),rawOutput:d.YjP().optional()}),j=d.Ikc({includeSteps:d.zMY().default(!1),includeCosts:d.zMY().default(!1),includeConfig:d.zMY().default(!1),includeLogs:d.zMY().default(!1)}),k=d.Ikc({agentType:d.YjP().min(1,"Agent type is required").regex(/^[a-z][a-z0-9-]*[a-z0-9]$/,"Agent type must be lowercase, alphanumeric with hyphens"),name:d.YjP().min(1,"Name is required"),description:d.YjP().optional(),version:d.YjP().regex(/^\d+\.\d+\.\d+$/,"Version must follow semantic versioning (e.g., 1.0.0)").optional(),enabled:d.zMY().default(!0),config:d.YjP().optional(),maxCostPerExecution:d.aig().nonnegative().optional(),maxDurationMs:d.aig().int().positive().optional(),timeoutMs:d.aig().int().positive().optional(),maxConcurrentExecutions:d.aig().int().min(1).optional(),cooldownMs:d.aig().int().nonnegative().optional()}),l=k.partial().omit({agentType:!0}),m=d.Ikc({enabled:d.zMY().optional(),orderBy:d.k5n(["name","agentType","createdAt","updatedAt"]).default("name"),orderDirection:d.k5n(["asc","desc"]).default("asc")}).merge(e),n=d.Ikc({executionId:d.YjP().min(1,"Execution ID is required"),modelUsed:d.YjP().min(1,"Model is required"),inputTokens:d.aig().int().nonnegative(),outputTokens:d.aig().int().nonnegative(),inputCostUsd:d.aig().nonnegative(),outputCostUsd:d.aig().nonnegative(),totalCostUsd:d.aig().nonnegative(),requestId:d.YjP().optional(),responseTime:d.aig().nonnegative().optional(),cacheHit:d.zMY().optional()}),o=d.Ikc({agentType:d.YjP().optional(),modelUsed:d.YjP().optional(),executionId:d.YjP().optional(),groupBy:d.k5n(["day","week","month","agent","model"]).optional(),includeBreakdown:d.zMY().default(!1),includeProjections:d.zMY().default(!1)}).merge(f).merge(e),p=d.Ikc({period:d.k5n(["day","week","month"]).default("day"),days:d.aig().int().positive().max(365).default(30)});d.Ikc({name:d.YjP().min(1,"Name is required"),agentType:d.YjP().min(1,"Agent type is required"),cronExpression:d.YjP().min(1,"Cron expression is required"),timezone:d.YjP().default("UTC"),enabled:d.zMY().default(!0),nodeIds:d.YOg(d.YjP()).optional(),executionConfig:d.g1P(d.YjP(),d.bzn()).optional(),maxExecutions:d.aig().int().positive().optional()}).partial().omit({agentType:!0});let q=d.Ikc({includeDatabase:d.zMY().default(!0),includeFileSystem:d.zMY().default(!0),includeExternalServices:d.zMY().default(!0)});d.Ikc({nodeId:d.YjP().default("localhost"),cpuUsagePercent:d.aig().min(0).max(100).optional(),memoryUsagePercent:d.aig().min(0).max(100).optional(),diskUsagePercent:d.aig().min(0).max(100).optional(),loadAverage1m:d.aig().nonnegative().optional(),loadAverage5m:d.aig().nonnegative().optional(),loadAverage15m:d.aig().nonnegative().optional(),diskFreeBytes:d.aig().nonnegative().optional(),diskTotalBytes:d.aig().positive().optional(),internetConnected:d.zMY().optional(),claudeApiLatencyMs:d.aig().nonnegative().optional(),overallHealth:d.k5n(["healthy","degraded","unhealthy"]).optional()});let r=d.Ikc({nodeId:d.YjP().default("localhost"),timeframe:d.k5n(["hour","day","week","month"]).default("day"),metrics:d.YjP().optional(),healthStatus:d.k5n(["healthy","warning","critical"]).optional(),limit:d.aig().int().positive().max(1e3).default(100),offset:d.aig().int().nonnegative().default(0)}).merge(f);d.Ikc({operations:d.YOg(d.Ikc({action:d.k5n(["create","update","delete"]),data:d.KCZ([h,i]),id:d.YjP().optional()})).min(1).max(100)}),d.Ikc({query:d.YjP().min(1,"Search query is required"),type:d.k5n(["executions","agents","schedules","logs"]).optional(),filters:d.g1P(d.YjP(),d.bzn()).optional()}).merge(e),d.Ikc({type:d.k5n(["executions","costs","config","all"]),format:d.k5n(["json","csv","excel"]),filters:d.g1P(d.YjP(),d.bzn()).optional()}).merge(f)},69334:(a,b,c)=>{c.d(b,{T9:()=>j,U9:()=>g,Zf:()=>h,cz:()=>i,jk:()=>k});var d=c(80228),e=c(46493),f=c(85766);function g(a){return(0,f.ll)`count(${a||f.ll.raw("*")})`.mapWith(Number)}function h(a){return(0,f.ll)`avg(${a})`.mapWith(String)}function i(a){return(0,f.ll)`sum(${a})`.mapWith(String)}function j(a){return(0,f.ll)`max(${a})`.mapWith((0,e.is)(a,d.V)?a:String)}function k(a){return(0,f.ll)`min(${a})`.mapWith((0,e.is)(a,d.V)?a:String)}},80045:(a,b,c)=>{c.d(b,{z:()=>n});var d=c(48689),e=c(85766),f=c(69334),g=c(71559),h=c(87280),i=c(71491),j=c(27628),k=c(26069);let l={getByAgentType:i.db.select().from(j.agentConfigurations).where((0,d.eq)(j.agentConfigurations.agentType,e.ll.placeholder("agentType"))).prepare(),getEnabledAgents:i.db.select().from(j.agentConfigurations).where((0,d.eq)(j.agentConfigurations.enabled,!0)).prepare(),updateEnabled:i.db.update(j.agentConfigurations).set({enabled:e.ll.placeholder("enabled"),updatedAt:e.ll.placeholder("updatedAt")}).where((0,d.eq)(j.agentConfigurations.agentType,e.ll.placeholder("agentType"))).prepare(),getAgentExecutionCount:i.db.select({count:(0,f.U9)()}).from(j.executions).where((0,d.eq)(j.executions.agentType,e.ll.placeholder("agentType"))).prepare()};class m{async createAgentConfiguration(a){try{this.validateAgentConfigData(a);let b=await this.getAgentByType(a.agentType);if(b.success&&b.data)throw new k.yI(`Agent type '${a.agentType}' already exists`,"agentType",a.agentType);let c={id:(0,h.sX)(),...a,config:a.config?JSON.stringify(a.config):void 0,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()},[d]=await i.db.insert(j.agentConfigurations).values(c).returning(),e={...d,config:d.config?JSON.parse(d.config):null};return{success:!0,data:e,affectedRows:1}}catch(a){return this.handleError("createAgentConfiguration",a)}}async getAgentByType(a){try{let[b]=await l.getByAgentType.execute({agentType:a});if(!b)throw new k.m_("AgentConfiguration",a);let c={...b,config:b.config?JSON.parse(b.config):null};return{success:!0,data:c}}catch(a){if(a instanceof k.m_)return{success:!1,error:a.message};return this.handleError("getAgentByType",a)}}async updateAgentConfiguration(a,b){try{let c={...b,config:b.config?JSON.stringify(b.config):void 0,updatedAt:new Date().toISOString()},[e]=await i.db.update(j.agentConfigurations).set(c).where((0,d.eq)(j.agentConfigurations.agentType,a)).returning();if(!e)throw new k.m_("AgentConfiguration",a);let f={...e,config:e.config?JSON.parse(e.config):null};return{success:!0,data:f,affectedRows:1}}catch(a){return this.handleError("updateAgentConfiguration",a)}}async deleteAgentConfiguration(a,b=!1){try{if(!b){let[b]=await l.getAgentExecutionCount.execute({agentType:a});if(b.count>0)throw new k.yI(`Cannot delete agent '${a}' with existing executions. Use force=true to override.`,"agentType",a)}let c=await i.db.delete(j.agentConfigurations).where((0,d.eq)(j.agentConfigurations.agentType,a));if(0===c.changes)throw new k.m_("AgentConfiguration",a);return{success:!0,affectedRows:c.changes}}catch(a){return this.handleError("deleteAgentConfiguration",a)}}async getAgentConfigurations(a={}){try{let{enabled:b,limit:c=50,offset:e=0,orderBy:h="name",orderDirection:k="asc"}=a,l=[];void 0!==b&&l.push((0,d.eq)(j.agentConfigurations.enabled,b));let m=i.db.select().from(j.agentConfigurations);switch(l.length>0&&(m=m.where((0,d.Uo)(...l))),h){case"name":m="asc"===k?m.orderBy((0,g.Y)(j.agentConfigurations.name)):m.orderBy((0,g.i)(j.agentConfigurations.name));break;case"agentType":m="asc"===k?m.orderBy((0,g.Y)(j.agentConfigurations.agentType)):m.orderBy((0,g.i)(j.agentConfigurations.agentType));break;case"createdAt":m="asc"===k?m.orderBy((0,g.Y)(j.agentConfigurations.createdAt)):m.orderBy((0,g.i)(j.agentConfigurations.createdAt));break;case"updatedAt":m="asc"===k?m.orderBy((0,g.Y)(j.agentConfigurations.updatedAt)):m.orderBy((0,g.i)(j.agentConfigurations.updatedAt));break;default:m=m.orderBy((0,g.Y)(j.agentConfigurations.name))}let n=i.db.select({count:(0,f.U9)()}).from(j.agentConfigurations);l.length>0&&(n=n.where((0,d.Uo)(...l)));let[{count:o}]=await n,p=await m.limit(c).offset(e),q=p.map(a=>({...a,config:a.config?JSON.parse(a.config):null}));return{success:!0,data:{data:q,total:o,page:Math.floor(e/c)+1,pageSize:c,hasMore:e+p.length<o}}}catch(a){return this.handleError("getAgentConfigurations",a)}}async getEnabledAgents(){try{let a=(await l.getEnabledAgents.execute({})).map(a=>({...a,config:a.config?JSON.parse(a.config):null}));return{success:!0,data:a}}catch(a){return this.handleError("getEnabledAgents",a)}}async toggleAgentEnabled(a,b){try{let[c]=await l.updateEnabled.execute({enabled:b,updatedAt:new Date().toISOString(),agentType:a});if(!c)throw new k.m_("AgentConfiguration",a);let d={...c,config:c.config?JSON.parse(c.config):null};return{success:!0,data:d,affectedRows:1}}catch(a){return this.handleError("toggleAgentEnabled",a)}}async getAgentPerformance(a){try{let b=i.db.select({agentType:j.executions.agentType,totalExecutions:(0,f.U9)(),successfulExecutions:(0,e.ll)`COUNT(CASE WHEN status = 'completed' THEN 1 END)`,failedExecutions:(0,e.ll)`COUNT(CASE WHEN status = 'failed' THEN 1 END)`,averageDuration:(0,e.ll)`AVG(duration_ms)`,totalCost:(0,f.cz)(j.executions.costUsd),averageCost:(0,f.Zf)(j.executions.costUsd),lastExecuted:(0,e.ll)`MAX(started_at)`}).from(j.executions).groupBy(j.executions.agentType);a&&(b=b.where((0,d.eq)(j.executions.agentType,a)));let c=(await b.orderBy((0,g.i)((0,f.U9)()))).map(a=>({agentType:a.agentType,totalExecutions:a.totalExecutions,successfulExecutions:a.successfulExecutions,failedExecutions:a.failedExecutions,averageDuration:a.averageDuration,totalCost:a.totalCost,averageCost:a.averageCost,lastExecuted:a.lastExecuted,successRate:a.totalExecutions>0?a.successfulExecutions/a.totalExecutions*100:0}));return{success:!0,data:c}}catch(a){return this.handleError("getAgentPerformance",a)}}async getAgentExecutionSummary(a,b=30){try{let c=new Date,g=new Date;g.setDate(g.getDate()-b);let[h]=await i.db.select({totalExecutions:(0,f.U9)(),successfulExecutions:(0,e.ll)`COUNT(CASE WHEN status = 'completed' THEN 1 END)`,failedExecutions:(0,e.ll)`COUNT(CASE WHEN status = 'failed' THEN 1 END)`,averageDuration:(0,f.Zf)(j.executions.durationMs),totalCost:(0,f.cz)(j.executions.costUsd)}).from(j.executions).where((0,d.Uo)((0,d.eq)(j.executions.agentType,a),gte(j.executions.startedAt,g.toISOString()),lte(j.executions.startedAt,c.toISOString()))),k=(await i.db.select({date:(0,e.ll)`DATE(started_at)`,totalExecutions:(0,f.U9)(),successfulExecutions:(0,e.ll)`COUNT(CASE WHEN status = 'completed' THEN 1 END)`}).from(j.executions).where((0,d.Uo)((0,d.eq)(j.executions.agentType,a),gte(j.executions.startedAt,g.toISOString()),lte(j.executions.startedAt,c.toISOString()))).groupBy((0,e.ll)`DATE(started_at)`).orderBy((0,e.ll)`DATE(started_at)`)).map(a=>({date:a.date,executions:a.totalExecutions,successRate:a.totalExecutions>0?a.successfulExecutions/a.totalExecutions*100:0})),l={totalExecutions:h.totalExecutions,successfulExecutions:h.successfulExecutions,failedExecutions:h.failedExecutions,averageDuration:h.averageDuration,totalCost:h.totalCost,recentTrend:k};return{success:!0,data:l}}catch(a){return this.handleError("getAgentExecutionSummary",a)}}async canExecuteAgent(a){try{let b=await this.getAgentByType(a);if(!b.success||!b.data)return{success:!0,data:{canExecute:!1,reason:`Agent configuration not found: ${a}`}};let c=b.data;if(!c.enabled)return{success:!0,data:{canExecute:!1,reason:"Agent is disabled"}};let[e]=await i.db.select({count:(0,f.U9)()}).from(j.executions).where((0,d.Uo)((0,d.eq)(j.executions.agentType,a),(0,d.eq)(j.executions.status,"running")));if(c.maxConcurrentExecutions&&e.count>=c.maxConcurrentExecutions)return{success:!0,data:{canExecute:!1,reason:`Maximum concurrent executions reached (${c.maxConcurrentExecutions})`,currentExecutions:e.count}};if(c.cooldownMs&&c.cooldownMs>0){let[b]=await i.db.select({startedAt:j.executions.startedAt}).from(j.executions).where((0,d.eq)(j.executions.agentType,a)).orderBy((0,g.i)(j.executions.startedAt)).limit(1);if(b){let a=Date.now()-new Date(b.startedAt).getTime();if(a<c.cooldownMs){let d=c.cooldownMs-a;return{success:!0,data:{canExecute:!1,reason:`Agent is in cooldown period (${Math.ceil(d/1e3)}s remaining)`,lastExecution:b.startedAt}}}}}return{success:!0,data:{canExecute:!0,currentExecutions:e.count}}}catch(a){return this.handleError("canExecuteAgent",a)}}validateAgentConfigData(a){if(!a.agentType)throw new k.yI("agentType is required","agentType");if(!a.name)throw new k.yI("name is required","name");if(!/^[a-z][a-z0-9-]*[a-z0-9]$/.test(a.agentType))throw new k.yI("agentType must be lowercase, alphanumeric with hyphens, starting and ending with a letter or number","agentType",a.agentType);if(void 0!==a.maxCostPerExecution&&a.maxCostPerExecution<0)throw new k.yI("maxCostPerExecution cannot be negative","maxCostPerExecution",a.maxCostPerExecution);if(void 0!==a.maxDurationMs&&a.maxDurationMs<=0)throw new k.yI("maxDurationMs must be positive","maxDurationMs",a.maxDurationMs);if(void 0!==a.timeoutMs&&a.timeoutMs<=0)throw new k.yI("timeoutMs must be positive","timeoutMs",a.timeoutMs);if(void 0!==a.maxConcurrentExecutions&&a.maxConcurrentExecutions<1)throw new k.yI("maxConcurrentExecutions must be at least 1","maxConcurrentExecutions",a.maxConcurrentExecutions);if(void 0!==a.cooldownMs&&a.cooldownMs<0)throw new k.yI("cooldownMs cannot be negative","cooldownMs",a.cooldownMs);if(a.version&&!/^\d+\.\d+\.\d+$/.test(a.version))throw new k.yI("version must follow semantic versioning (e.g., 1.0.0)","version",a.version)}handleError(a,b){return(console.error(`AgentService.${a} error:`,b),b instanceof k.yI||b instanceof k.m_)?{success:!1,error:b.message}:{success:!1,error:b instanceof Error?b.message:"Unknown database error"}}}let n=new m}};