"use strict";(()=>{var a={};a.id=685,a.ids=[685],a.modules={261:a=>{a.exports=require("next/dist/shared/lib/router/utils/app-paths")},3295:a=>{a.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:a=>{a.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},19121:a=>{a.exports=require("next/dist/server/app-render/action-async-storage.external.js")},21409:(a,b,c)=>{c.d(b,{f:()=>o});var d=c(69334),e=c(85766),f=c(48689),g=c(71559),h=c(87280),i=c(71491),j=c(27628),k=c(26069);let l={"claude-3-5-sonnet-20241022":{inputCostPer1M:3,outputCostPer1M:15},"claude-3-5-haiku-20241022":{inputCostPer1M:.25,outputCostPer1M:1.25},"claude-3-opus-20240229":{inputCostPer1M:15,outputCostPer1M:75}},m={getCurrentMonthCost:i.db.select({totalCost:(0,d.cz)(j.costTracking.totalCostUsd),totalExecutions:(0,d.U9)(),totalTokens:(0,e.ll)`SUM(input_tokens + output_tokens)`}).from(j.costTracking).where((0,f.Uo)((0,f.eq)(j.costTracking.year,e.ll.placeholder("year")),(0,f.eq)(j.costTracking.month,e.ll.placeholder("month")))).prepare(),getCostsByExecution:i.db.select().from(j.costTracking).where((0,f.eq)(j.costTracking.executionId,e.ll.placeholder("executionId"))).prepare(),getDailyCosts:i.db.select({date:(0,e.ll)`year || '-' || printf('%02d', month) || '-' || printf('%02d', day)`,totalCost:(0,d.cz)(j.costTracking.totalCostUsd),executionCount:(0,d.U9)(),avgCostPerExecution:(0,d.Zf)(j.costTracking.totalCostUsd),tokenUsage:(0,e.ll)`SUM(input_tokens + output_tokens)`}).from(j.costTracking).groupBy(j.costTracking.year,j.costTracking.month,j.costTracking.day).orderBy(j.costTracking.year,j.costTracking.month,j.costTracking.day).prepare()};class n{async recordCost(a){try{this.validateCostData(a);let b=new Date,c={id:(0,h.sX)(),...a,timestamp:b.toISOString(),year:b.getFullYear(),month:b.getMonth()+1,day:b.getDate()},[d]=await i.db.insert(j.costTracking).values(c).returning();return this.updateMonthlySummary(c.year,c.month).catch(a=>{console.error("Failed to update monthly summary:",a)}),{success:!0,data:d,affectedRows:1}}catch(a){return this.handleError("recordCost",a)}}calculateCost(a,b,c){let d=l[a];if(!d)throw new k.yI(`Unknown model: ${a}`,"modelUsed",a);let e=b/1e6*d.inputCostPer1M,f=c/1e6*d.outputCostPer1M;return{inputCostUsd:Math.round(1e5*e)/1e5,outputCostUsd:Math.round(1e5*f)/1e5,totalCostUsd:Math.round(1e5*(e+f))/1e5}}async recordCostFromTokens(a){try{let b=this.calculateCost(a.modelUsed,a.inputTokens,a.outputTokens);return await this.recordCost({...a,...b})}catch(a){return this.handleError("recordCostFromTokens",a)}}async getCurrentMonthCost(){try{let a=new Date,[b]=await m.getCurrentMonthCost.execute({year:a.getFullYear(),month:a.getMonth()+1}),c={totalCost:b.totalCost||0,totalExecutions:b.totalExecutions||0,totalTokens:b.totalTokens||0};return{success:!0,data:c}}catch(a){return this.handleError("getCurrentMonthCost",a)}}async getCostStats(){try{let a=new Date,b=a.getFullYear(),c=a.getMonth()+1,h=1===c?12:c-1,k=1===c?b-1:b,[l]=await m.getCurrentMonthCost.execute({year:b,month:c}),[n]=await m.getCurrentMonthCost.execute({year:k,month:h}),[o]=await i.db.select({totalCost:(0,d.cz)(j.costTracking.totalCostUsd),totalTokens:(0,e.ll)`SUM(input_tokens + output_tokens)`}).from(j.costTracking).where((0,f.eq)(j.costTracking.year,b)),[p]=await i.db.select({avgCost:(0,d.Zf)(j.costTracking.totalCostUsd)}).from(j.costTracking).where((0,f.Uo)((0,f.eq)(j.costTracking.year,b),(0,f.eq)(j.costTracking.month,c))),q=await i.db.select({executionId:j.costTracking.executionId,totalCost:j.costTracking.totalCostUsd,agentType:j.executions.agentType}).from(j.costTracking).leftJoin(j.executions,(0,f.eq)(j.costTracking.executionId,j.executions.id)).orderBy((0,g.i)(j.costTracking.totalCostUsd)).limit(1),r={currentMonth:l.totalCost||0,lastMonth:n.totalCost||0,yearToDate:o.totalCost||0,averagePerExecution:p.avgCost||0,totalTokens:o.totalTokens||0,mostExpensiveExecution:q[0]?{id:q[0].executionId||"",cost:q[0].totalCost||0,agentType:q[0].agentType||"unknown"}:null};return{success:!0,data:r}}catch(a){return this.handleError("getCostStats",a)}}async getCostAnalysis(a={}){try{let b=this.buildCostConditions(a),c=i.db.select({id:j.costTracking.id,executionId:j.costTracking.executionId,modelUsed:j.costTracking.modelUsed,inputTokens:j.costTracking.inputTokens,outputTokens:j.costTracking.outputTokens,inputCostUsd:j.costTracking.inputCostUsd,outputCostUsd:j.costTracking.outputCostUsd,totalCostUsd:j.costTracking.totalCostUsd,timestamp:j.costTracking.timestamp,agentType:j.executions.agentType,cacheHit:j.costTracking.cacheHit,responseTime:j.costTracking.responseTime}).from(j.costTracking).leftJoin(j.executions,(0,f.eq)(j.costTracking.executionId,j.executions.id));b.length>0&&(c=c.where((0,f.Uo)(...b)));let d=await c.orderBy((0,g.i)(j.costTracking.timestamp));return{success:!0,data:d}}catch(a){return this.handleError("getCostAnalysis",a)}}async getCostTrends(a="day",b=30){try{let c,g,h=new Date,k=new Date;switch(k.setDate(k.getDate()-b),a){case"day":c=(0,e.ll)`year, month, day`,g=(0,e.ll)`year || '-' || printf('%02d', month) || '-' || printf('%02d', day)`;break;case"week":c=(0,e.ll)`year, strftime('%W', timestamp)`,g=(0,e.ll)`year || '-W' || strftime('%W', timestamp)`;break;case"month":c=(0,e.ll)`year, month`,g=(0,e.ll)`year || '-' || printf('%02d', month)`}let l=(await i.db.select({period:g,totalCost:(0,d.cz)(j.costTracking.totalCostUsd),executionCount:(0,d.U9)(),averageCostPerExecution:(0,d.Zf)(j.costTracking.totalCostUsd),tokenUsage:(0,e.ll)`SUM(input_tokens + output_tokens)`}).from(j.costTracking).where((0,f.Uo)((0,f.RO)(j.costTracking.timestamp,k.toISOString()),(0,f.wJ)(j.costTracking.timestamp,h.toISOString()))).groupBy(c).orderBy(g)).map(a=>({period:a.period,totalCost:a.totalCost||0,executionCount:a.executionCount||0,averageCostPerExecution:a.averageCostPerExecution||0,tokenUsage:a.tokenUsage||0}));return{success:!0,data:l}}catch(a){return this.handleError("getCostTrends",a)}}async getExecutionCosts(a){try{let b=await m.getCostsByExecution.execute({executionId:a});return{success:!0,data:b}}catch(a){return this.handleError("getExecutionCosts",a)}}async checkCostAlerts(a){try{let b=[],c=new Date;if(a.monthly){let c=await this.getCurrentMonthCost();if(c.success&&c.data){let d=c.data.totalCost,e=.8*a.monthly;d>e&&b.push({type:"monthly",threshold:a.monthly,currentAmount:d,triggered:d>a.monthly,message:d>a.monthly?`Monthly budget exceeded: $${d.toFixed(4)} / $${a.monthly.toFixed(4)}`:`Monthly budget warning: $${d.toFixed(4)} / $${a.monthly.toFixed(4)} (${Math.round(d/a.monthly*100)}%)`})}}if(a.daily){let[e]=await i.db.select({totalCost:(0,d.cz)(j.costTracking.totalCostUsd)}).from(j.costTracking).where((0,f.Uo)((0,f.eq)(j.costTracking.year,c.getFullYear()),(0,f.eq)(j.costTracking.month,c.getMonth()+1),(0,f.eq)(j.costTracking.day,c.getDate()))),g=e.totalCost||0,h=.8*a.daily;g>h&&b.push({type:"daily",threshold:a.daily,currentAmount:g,triggered:g>a.daily,message:g>a.daily?`Daily budget exceeded: $${g.toFixed(4)} / $${a.daily.toFixed(4)}`:`Daily budget warning: $${g.toFixed(4)} / $${a.daily.toFixed(4)} (${Math.round(g/a.daily*100)}%)`})}return{success:!0,data:b}}catch(a){return this.handleError("checkCostAlerts",a)}}async updateMonthlySummary(a,b){try{let[c]=await i.db.select({totalCost:(0,d.cz)(j.costTracking.totalCostUsd),totalExecutions:(0,d.U9)(),totalTokens:(0,e.ll)`SUM(input_tokens + output_tokens)`,avgCostPerExecution:(0,d.Zf)(j.costTracking.totalCostUsd),avgTokensPerExecution:(0,e.ll)`AVG(input_tokens + output_tokens)`}).from(j.costTracking).where((0,f.Uo)((0,f.eq)(j.costTracking.year,a),(0,f.eq)(j.costTracking.month,b))),g=await i.db.select({agentType:j.executions.agentType,totalCost:(0,d.cz)(j.costTracking.totalCostUsd)}).from(j.costTracking).leftJoin(j.executions,(0,f.eq)(j.costTracking.executionId,j.executions.id)).where((0,f.Uo)((0,f.eq)(j.costTracking.year,a),(0,f.eq)(j.costTracking.month,b))).groupBy(j.executions.agentType),k=Object.fromEntries(g.map(a=>[a.agentType||"unknown",a.totalCost||0])),l={id:(0,h.sX)(),year:a,month:b,totalCostUsd:c.totalCost||0,totalExecutions:c.totalExecutions||0,totalTokens:c.totalTokens||0,avgCostPerExecution:c.avgCostPerExecution||0,avgTokensPerExecution:c.avgTokensPerExecution||0,costByAgentType:JSON.stringify(k),lastUpdated:new Date().toISOString()};(await i.db.select().from(j.monthlyCostSummaries).where((0,f.Uo)((0,f.eq)(j.monthlyCostSummaries.year,a),(0,f.eq)(j.monthlyCostSummaries.month,b)))).length>0?await i.db.update(j.monthlyCostSummaries).set(l).where((0,f.Uo)((0,f.eq)(j.monthlyCostSummaries.year,a),(0,f.eq)(j.monthlyCostSummaries.month,b))):await i.db.insert(j.monthlyCostSummaries).values(l)}catch(a){throw console.error("Failed to update monthly summary:",a),a}}buildCostConditions(a){let b=[];return a.dateFrom&&b.push((0,f.RO)(j.costTracking.timestamp,a.dateFrom.toISOString())),a.dateTo&&b.push((0,f.wJ)(j.costTracking.timestamp,a.dateTo.toISOString())),a.agentType&&b.push((0,f.eq)(j.executions.agentType,a.agentType)),a.modelUsed&&b.push((0,f.eq)(j.costTracking.modelUsed,a.modelUsed)),a.executionId&&b.push((0,f.eq)(j.costTracking.executionId,a.executionId)),b}validateCostData(a){if(!a.executionId)throw new k.yI("executionId is required","executionId");if(!a.modelUsed)throw new k.yI("modelUsed is required","modelUsed");if(a.inputTokens<0)throw new k.yI("inputTokens cannot be negative","inputTokens",a.inputTokens);if(a.outputTokens<0)throw new k.yI("outputTokens cannot be negative","outputTokens",a.outputTokens);if(a.totalCostUsd<0)throw new k.yI("totalCostUsd cannot be negative","totalCostUsd",a.totalCostUsd);if(void 0!==a.responseTime&&a.responseTime<0)throw new k.yI("responseTime cannot be negative","responseTime",a.responseTime)}handleError(a,b){return(console.error(`CostService.${a} error:`,b),b instanceof k.yI||b instanceof k.m_)?{success:!1,error:b.message}:{success:!1,error:b instanceof Error?b.message:"Unknown database error"}}}let o=new n},26069:(a,b,c)=>{c.d(b,{m_:()=>e,yI:()=>d});class d extends Error{constructor(a,b,c){super(a),this.field=b,this.value=c,this.name="ValidationError"}}class e extends Error{constructor(a,b){super(`${a} with identifier '${b}' not found`),this.name="NotFoundError"}}},29021:a=>{a.exports=require("fs")},29294:a=>{a.exports=require("next/dist/server/app-render/work-async-storage.external.js")},31283:(a,b,c)=>{c.r(b),c.d(b,{handler:()=>E,patchFetch:()=>D,routeModule:()=>z,serverHooks:()=>C,workAsyncStorage:()=>A,workUnitAsyncStorage:()=>B});var d={};c.r(d),c.d(d,{GET:()=>y});var e=c(95736),f=c(9117),g=c(4044),h=c(39326),i=c(32324),j=c(261),k=c(54290),l=c(85328),m=c(38928),n=c(46595),o=c(3421),p=c(17679),q=c(41681),r=c(63446),s=c(86439),t=c(51356),u=c(1003),v=c(21409),w=c(59507);let x=w.Ikc({monthlyBudget:w.auy.number().refine(a=>!Number.isNaN(a)&&a>0,{message:"monthlyBudget must be a positive number"}).optional(),dailyBudget:w.auy.number().refine(a=>!Number.isNaN(a)&&a>0,{message:"dailyBudget must be a positive number"}).optional(),perExecutionBudget:w.auy.number().refine(a=>!Number.isNaN(a)&&a>0,{message:"perExecutionBudget must be a positive number"}).optional()}),y=(0,u.FB)(async a=>{let b=a.nextUrl.searchParams,c=(0,u.fe)(b,x),d={};void 0!==c.monthlyBudget&&(d.monthly=c.monthlyBudget),void 0!==c.dailyBudget&&(d.daily=c.dailyBudget),void 0!==c.perExecutionBudget&&(d.perExecution=c.perExecutionBudget);let[e,f]=await Promise.all([v.f.getCostStats(),Object.keys(d).length>0?v.f.checkCostAlerts(d):null]);if(!e.success)throw Error(e.error||"Failed to get cost stats");let g={stats:e.data,alerts:f?.success?f.data:[]};return(0,u.sq)(()=>Promise.resolve({success:!0,data:g}))}),z=new e.AppRouteRouteModule({definition:{kind:f.RouteKind.APP_ROUTE,page:"/api/costs/summary/route",pathname:"/api/costs/summary",filename:"route",bundlePath:"app/api/costs/summary/route"},distDir:".next",relativeProjectDir:"",resolvedPagePath:"/home/jmagar/code/agents/src/app/api/costs/summary/route.ts",nextConfigOutput:"standalone",userland:d}),{workAsyncStorage:A,workUnitAsyncStorage:B,serverHooks:C}=z;function D(){return(0,g.patchFetch)({workAsyncStorage:A,workUnitAsyncStorage:B})}async function E(a,b,c){var d;let e="/api/costs/summary/route";"/index"===e&&(e="/");let g=await z.prepare(a,b,{srcPage:e,multiZoneDraftMode:!1});if(!g)return b.statusCode=400,b.end("Bad Request"),null==c.waitUntil||c.waitUntil.call(c,Promise.resolve()),null;let{buildId:u,params:v,nextConfig:w,isDraftMode:x,prerenderManifest:y,routerServerContext:A,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,resolvedPathname:D}=g,E=(0,j.normalizeAppPath)(e),F=!!(y.dynamicRoutes[E]||y.routes[D]);if(F&&!x){let a=!!y.routes[D],b=y.dynamicRoutes[E];if(b&&!1===b.fallback&&!a)throw new s.NoFallbackError}let G=null;!F||z.isDev||x||(G="/index"===(G=D)?"/":G);let H=!0===z.isDev||!F,I=F&&!H,J=a.method||"GET",K=(0,i.getTracer)(),L=K.getActiveScopeSpan(),M={params:v,prerenderManifest:y,renderOpts:{experimental:{cacheComponents:!!w.experimental.cacheComponents,authInterrupts:!!w.experimental.authInterrupts},supportsDynamicResponse:H,incrementalCache:(0,h.getRequestMeta)(a,"incrementalCache"),cacheLifeProfiles:null==(d=w.experimental)?void 0:d.cacheLife,isRevalidate:I,waitUntil:c.waitUntil,onClose:a=>{b.on("close",a)},onAfterTaskError:void 0,onInstrumentationRequestError:(b,c,d)=>z.onRequestError(a,b,d,A)},sharedContext:{buildId:u}},N=new k.NodeNextRequest(a),O=new k.NodeNextResponse(b),P=l.NextRequestAdapter.fromNodeNextRequest(N,(0,l.signalFromNodeResponse)(b));try{let d=async c=>z.handle(P,M).finally(()=>{if(!c)return;c.setAttributes({"http.status_code":b.statusCode,"next.rsc":!1});let d=K.getRootSpanAttributes();if(!d)return;if(d.get("next.span_type")!==m.BaseServerSpan.handleRequest)return void console.warn(`Unexpected root span type '${d.get("next.span_type")}'. Please report this Next.js issue https://github.com/vercel/next.js`);let e=d.get("next.route");if(e){let a=`${J} ${e}`;c.setAttributes({"next.route":e,"http.route":e,"next.span_name":a}),c.updateName(a)}else c.updateName(`${J} ${a.url}`)}),g=async g=>{var i,j;let k=async({previousCacheEntry:f})=>{try{if(!(0,h.getRequestMeta)(a,"minimalMode")&&B&&C&&!f)return b.statusCode=404,b.setHeader("x-nextjs-cache","REVALIDATED"),b.end("This page could not be found"),null;let e=await d(g);a.fetchMetrics=M.renderOpts.fetchMetrics;let i=M.renderOpts.pendingWaitUntil;i&&c.waitUntil&&(c.waitUntil(i),i=void 0);let j=M.renderOpts.collectedTags;if(!F)return await (0,o.I)(N,O,e,M.renderOpts.pendingWaitUntil),null;{let a=await e.blob(),b=(0,p.toNodeOutgoingHttpHeaders)(e.headers);j&&(b[r.NEXT_CACHE_TAGS_HEADER]=j),!b["content-type"]&&a.type&&(b["content-type"]=a.type);let c=void 0!==M.renderOpts.collectedRevalidate&&!(M.renderOpts.collectedRevalidate>=r.INFINITE_CACHE)&&M.renderOpts.collectedRevalidate,d=void 0===M.renderOpts.collectedExpire||M.renderOpts.collectedExpire>=r.INFINITE_CACHE?void 0:M.renderOpts.collectedExpire;return{value:{kind:t.CachedRouteKind.APP_ROUTE,status:e.status,body:Buffer.from(await a.arrayBuffer()),headers:b},cacheControl:{revalidate:c,expire:d}}}}catch(b){throw(null==f?void 0:f.isStale)&&await z.onRequestError(a,b,{routerKind:"App Router",routePath:e,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})},A),b}},l=await z.handleResponse({req:a,nextConfig:w,cacheKey:G,routeKind:f.RouteKind.APP_ROUTE,isFallback:!1,prerenderManifest:y,isRoutePPREnabled:!1,isOnDemandRevalidate:B,revalidateOnlyGenerated:C,responseGenerator:k,waitUntil:c.waitUntil});if(!F)return null;if((null==l||null==(i=l.value)?void 0:i.kind)!==t.CachedRouteKind.APP_ROUTE)throw Object.defineProperty(Error(`Invariant: app-route received invalid cache entry ${null==l||null==(j=l.value)?void 0:j.kind}`),"__NEXT_ERROR_CODE",{value:"E701",enumerable:!1,configurable:!0});(0,h.getRequestMeta)(a,"minimalMode")||b.setHeader("x-nextjs-cache",B?"REVALIDATED":l.isMiss?"MISS":l.isStale?"STALE":"HIT"),x&&b.setHeader("Cache-Control","private, no-cache, no-store, max-age=0, must-revalidate");let m=(0,p.fromNodeOutgoingHttpHeaders)(l.value.headers);return(0,h.getRequestMeta)(a,"minimalMode")&&F||m.delete(r.NEXT_CACHE_TAGS_HEADER),!l.cacheControl||b.getHeader("Cache-Control")||m.get("Cache-Control")||m.set("Cache-Control",(0,q.getCacheControlHeader)(l.cacheControl)),await (0,o.I)(N,O,new Response(l.value.body,{headers:m,status:l.value.status||200})),null};L?await g(L):await K.withPropagatedContext(a.headers,()=>K.trace(m.BaseServerSpan.handleRequest,{spanName:`${J} ${a.url}`,kind:i.SpanKind.SERVER,attributes:{"http.method":J,"http.target":a.url}},g))}catch(b){if(L||b instanceof s.NoFallbackError||await z.onRequestError(a,b,{routerKind:"App Router",routePath:E,routeType:"route",revalidateReason:(0,n.c)({isRevalidate:I,isOnDemandRevalidate:B})}),F)throw b;return await (0,o.I)(N,O,new Response(null,{status:500})),null}}},33873:a=>{a.exports=require("path")},44870:a=>{a.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},63033:a=>{a.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},69334:(a,b,c)=>{c.d(b,{T9:()=>j,U9:()=>g,Zf:()=>h,cz:()=>i,jk:()=>k});var d=c(80228),e=c(46493),f=c(85766);function g(a){return(0,f.ll)`count(${a||f.ll.raw("*")})`.mapWith(Number)}function h(a){return(0,f.ll)`avg(${a})`.mapWith(String)}function i(a){return(0,f.ll)`sum(${a})`.mapWith(String)}function j(a){return(0,f.ll)`max(${a})`.mapWith((0,e.is)(a,d.V)?a:String)}function k(a){return(0,f.ll)`min(${a})`.mapWith((0,e.is)(a,d.V)?a:String)}},77598:a=>{a.exports=require("node:crypto")},86439:a=>{a.exports=require("next/dist/shared/lib/no-fallback-error.external")},87550:a=>{a.exports=require("better-sqlite3")}};var b=require("../../../../webpack-runtime.js");b.C(a);var c=b.X(0,[586,923,213],()=>b(b.s=31283));module.exports=c})();